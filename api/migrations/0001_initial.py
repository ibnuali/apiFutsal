# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2017-01-26 20:44
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id_chat', models.AutoField(primary_key=True, serialize=False)),
                ('chat_type', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'chat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id_city', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('name_city', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'city',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id_country', models.AutoField(primary_key=True, serialize=False)),
                ('name_country', models.CharField(max_length=40)),
            ],
            options={
                'db_table': 'country',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id_district', models.CharField(max_length=7, primary_key=True, serialize=False)),
                ('name_district', models.CharField(max_length=60)),
            ],
            options={
                'db_table': 'district',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FieldLocation',
            fields=[
                ('field', models.AutoField(primary_key=True, serialize=False)),
                ('name_field', models.CharField(max_length=40)),
                ('latitude_field', models.FloatField()),
                ('longitude_field', models.FloatField()),
            ],
            options={
                'db_table': 'field_location',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Friend',
            fields=[
                ('id_friend', models.AutoField(primary_key=True, serialize=False)),
                ('friend_status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'friend',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Genders',
            fields=[
                ('id_gender', models.AutoField(primary_key=True, serialize=False)),
                ('gender', models.CharField(max_length=6)),
            ],
            options={
                'db_table': 'genders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='JoinParty',
            fields=[
                ('id_join_party', models.AutoField(primary_key=True, serialize=False)),
                ('date_join_party', models.DateTimeField()),
            ],
            options={
                'db_table': 'join_party',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='JoinRoom',
            fields=[
                ('id_join_room', models.AutoField(primary_key=True, serialize=False)),
                ('date_join_room', models.DateTimeField()),
            ],
            options={
                'db_table': 'join_room',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id_level', models.AutoField(primary_key=True, serialize=False)),
                ('score_level', models.IntegerField()),
                ('score_exp', models.IntegerField()),
            ],
            options={
                'db_table': 'level',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='LevelHistory',
            fields=[
                ('id_level_history', models.IntegerField(primary_key=True, serialize=False)),
                ('date_level_history', models.DateTimeField()),
                ('player_exp', models.IntegerField()),
            ],
            options={
                'db_table': 'level_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id_party', models.AutoField(primary_key=True, serialize=False)),
                ('party_name', models.CharField(max_length=50)),
                ('party_created', models.DateTimeField()),
                ('party_status', models.IntegerField()),
            ],
            options={
                'db_table': 'party',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('player', models.AutoField(primary_key=True, serialize=False)),
                ('player_name', models.CharField(max_length=40)),
                ('player_photo', models.CharField(max_length=30)),
                ('player_birth_place', models.CharField(blank=True, max_length=30, null=True)),
                ('player_birth_date', models.DateField(blank=True, null=True)),
                ('player_address', models.CharField(blank=True, max_length=80, null=True)),
                ('player_handphone', models.CharField(max_length=13)),
                ('player_email', models.CharField(max_length=50)),
                ('player_username', models.CharField(max_length=30)),
                ('player_password', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'player',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PlayerPosition',
            fields=[
                ('id_player_position', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'player_position',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Positions',
            fields=[
                ('id_position', models.AutoField(primary_key=True, serialize=False)),
                ('position', models.CharField(max_length=15)),
            ],
            options={
                'db_table': 'positions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id_province', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('name_province', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'province',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id_rating', models.AutoField(primary_key=True, serialize=False)),
                ('score_rating', models.FloatField()),
            ],
            options={
                'db_table': 'rating',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RatingHistory',
            fields=[
                ('id_rating_history', models.AutoField(primary_key=True, serialize=False)),
                ('date_rating_history', models.DateTimeField()),
            ],
            options={
                'db_table': 'rating_history',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequiredPositions',
            fields=[
                ('id_required_positions', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'required_positions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id_room', models.AutoField(primary_key=True, serialize=False)),
                ('room_name', models.CharField(max_length=50)),
                ('room_stadium', models.CharField(max_length=40)),
                ('room_address', models.CharField(max_length=80)),
                ('room_duration', models.TimeField()),
                ('required_level_min', models.IntegerField(blank=True, null=True)),
                ('required_level_max', models.IntegerField(blank=True, null=True)),
                ('required_gender', models.IntegerField()),
                ('required_age_min', models.IntegerField(blank=True, null=True)),
                ('required_age_max', models.IntegerField(blank=True, null=True)),
                ('required_slot', models.IntegerField()),
                ('room_status', models.IntegerField()),
                ('room_created', models.DateTimeField()),
                ('room_updated', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'room',
                'managed': False,
            },
        ),
    ]
